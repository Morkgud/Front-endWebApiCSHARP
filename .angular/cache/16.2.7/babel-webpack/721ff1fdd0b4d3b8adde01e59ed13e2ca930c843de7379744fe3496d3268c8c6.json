{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/filmes.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/filmes\", a1];\n};\nfunction FilmesComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const filme_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, filme_r1.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", filme_r1.Nome, \" \");\n  }\n}\nexport class FilmesComponent {\n  constructor(filmesService) {\n    this.filmesService = filmesService;\n    this.filmes = [];\n    // Adicione um formulário para o novo filme\n    this.novoFilmeForm = new FormGroup({\n      Nome: new FormControl(''),\n      Ano: new FormControl(''),\n      Diretor: new FormControl(''),\n      Duracao: new FormControl(''),\n      Genero: new FormControl(''),\n      Estudio: new FormControl('')\n    });\n  }\n  ngOnInit() {\n    this.listarFilmes();\n  }\n  listarFilmes() {\n    this.filmesService.listarFilmes().subscribe(filmes => {\n      this.filmes = filmes;\n    });\n  }\n  cadastrarFilme() {\n    const novoFilme = {\n      id: 0,\n      Nome: this.novoFilmeForm.get('Nome')?.value,\n      Ano: this.novoFilmeForm.get('Ano')?.value,\n      Diretor: this.novoFilmeForm.get('Diretor')?.value,\n      Duracao: this.novoFilmeForm.get('Duracao')?.value,\n      Genero: this.novoFilmeForm.get('Genero')?.value,\n      Estudio: this.novoFilmeForm.get('Estudio')?.value\n    };\n    this.filmesService.cadastrarFilme(novoFilme).subscribe(() => {\n      this.listarFilmes();\n    });\n  }\n  static #_ = this.ɵfac = function FilmesComponent_Factory(t) {\n    return new (t || FilmesComponent)(i0.ɵɵdirectiveInject(i1.FilmesService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilmesComponent,\n    selectors: [[\"app-filmes\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"type\", \"submit\"], [3, \"routerLink\"]],\n    template: function FilmesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Lista de filmes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\");\n        i0.ɵɵtemplate(3, FilmesComponent_li_3_Template, 3, 4, \"li\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\")(5, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function FilmesComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.cadastrarFilme();\n        });\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵtext(7, \"Cadastrar filme\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filmes);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterLink, i4.ɵNgNoValidate, i4.NgControlStatusGroup],\n    styles: [\"h1[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: bold;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin: 10px;\\n}\\n\\na[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: blue;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: blue;\\n  color: white;\\n  padding: 10px;\\n  border-radius: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9maWxtZXMvZmlsbWVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLFNBQVM7RUFDVCxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsWUFBWTtBQUNkOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osYUFBYTtFQUNiLGtCQUFrQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbnVsIHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbmxpIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","filme_r1","id","ɵɵtextInterpolate1","Nome","FilmesComponent","constructor","filmesService","filmes","novoFilmeForm","Ano","Diretor","Duracao","Genero","Estudio","ngOnInit","listarFilmes","subscribe","cadastrarFilme","novoFilme","get","value","_","ɵɵdirectiveInject","i1","FilmesService","_2","selectors","decls","vars","consts","template","FilmesComponent_Template","rf","ctx","ɵɵtemplate","FilmesComponent_li_3_Template","ɵɵlistener","FilmesComponent_Template_form_ngSubmit_5_listener"],"sources":["C:\\Users\\jarth\\Downloads\\WebApi\\appWebApi\\src\\app\\components\\filmes\\filmes.component.ts","C:\\Users\\jarth\\Downloads\\WebApi\\appWebApi\\src\\app\\components\\filmes\\filmes.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Filmes } from '../Filmes';\nimport { FilmesService } from 'src/app/filmes.service';\n\n@Component({\n  selector: 'app-filmes',\n  templateUrl: './filmes.component.html',\n  styleUrls: ['./filmes.component.css']\n})\nexport class FilmesComponent implements OnInit {\n\n  filmes: Filmes[] = [];\n\n  // Adicione um formulário para o novo filme\n  novoFilmeForm = new FormGroup({\n    Nome: new FormControl(''),\n    Ano: new FormControl(''),\n    Diretor: new FormControl(''),\n    Duracao: new FormControl(''),\n    Genero: new FormControl(''),\n    Estudio: new FormControl('')\n  });\n\n  constructor(private filmesService: FilmesService) { }\n\n  ngOnInit(): void {\n    this.listarFilmes();\n  }\n\n  listarFilmes(): void {\n    this.filmesService.listarFilmes().subscribe(filmes => {\n      this.filmes = filmes;\n    });\n  }\n\n  cadastrarFilme(): void {\n    const novoFilme: Filmes = {\n      id: 0, // O id será atribuído pelo servidor, pode ser qualquer valor inicial aqui\n      Nome: this.novoFilmeForm.get('Nome')?.value,\n      Ano: this.novoFilmeForm.get('Ano')?.value,\n      Diretor: this.novoFilmeForm.get('Diretor')?.value,\n      Duracao: this.novoFilmeForm.get('Duracao')?.value,\n      Genero: this.novoFilmeForm.get('Genero')?.value,\n      Estudio: this.novoFilmeForm.get('Estudio')?.value,\n    };\n\n    this.filmesService.cadastrarFilme(novoFilme).subscribe(() => {\n      this.listarFilmes();\n    });\n  }\n\n}\n","<h1>Lista de filmes</h1>\n\n<ul>\n  <li *ngFor=\"let filme of filmes\">\n    <a [routerLink]=\"['/filmes', filme.id]\">\n      {{ filme.Nome }} <!-- Corrigido para exibir o nome do filme -->\n    </a>\n  </li>\n</ul>\n\n<div>\n  <form (ngSubmit)=\"cadastrarFilme()\">\n    <button type=\"submit\">Cadastrar filme</button>\n  </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}