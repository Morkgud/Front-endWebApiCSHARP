{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class FilmesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/Filmes';\n  }\n  listarFilmes() {\n    return this.http.get(`${this.apiUrl}/Filmes`);\n  }\n  cadastrarFilme(filme) {\n    return this.http.post(this.apiUrl, filme, httpOptions);\n  }\n  buscarFilme(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  alterarFilme(filme) {\n    return this.http.put(`${this.apiUrl}/${filme.id}`, filme, httpOptions);\n  }\n  excluirFilme(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function FilmesService_Factory(t) {\n    return new (t || FilmesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FilmesService,\n    factory: FilmesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","FilmesService","constructor","http","apiUrl","listarFilmes","get","cadastrarFilme","filme","post","buscarFilme","id","alterarFilme","put","excluirFilme","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["c:\\Users\\jarth\\Downloads\\WebApi\\appWebApi\\src\\app\\filmes.service.ts"],"sourcesContent":["import { Filmes } from './components/Filmes';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n  'Content-Type' : 'application/json'\n  })\n  }\n  @Injectable({\n  providedIn: 'root'\n  })\n  export class FilmesService {\n\n    constructor(private http: HttpClient) {}\n  \n    apiUrl = 'http://localhost:5000/Filmes';\n  \n    listarFilmes(): Observable<Filmes[]> {\n      return this.http.get<Filmes[]>(`${this.apiUrl}/Filmes`);\n    }\n    \n    cadastrarFilme(filme: Filmes): Observable<Filmes> {\n      return this.http.post<Filmes>(this.apiUrl, filme, httpOptions);\n    }\n    \n    buscarFilme(id: number): Observable<Filmes> {\n      return this.http.get<Filmes>(`${this.apiUrl}/${id}`);\n    }\n    \n    alterarFilme(filme: Filmes): Observable<Filmes> {\n      return this.http.put<Filmes>(`${this.apiUrl}/${filme.id}`, filme, httpOptions);\n    }\n    \n    excluirFilme(id: number): Observable<void> {\n      return this.http.delete<void>(`${this.apiUrl}/${id}`);\n    }\n    }\n"],"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACzB,cAAc,EAAG;GAChB;CACA;AAID,OAAM,MAAOG,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,MAAM,GAAG,8BAA8B;EAFA;EAIvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,SAAS,CAAC;EACzD;EAEAG,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAS,IAAI,CAACL,MAAM,EAAEI,KAAK,EAAET,WAAW,CAAC;EAChE;EAEAW,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,IAAIO,EAAE,EAAE,CAAC;EACtD;EAEAC,YAAYA,CAACJ,KAAa;IACxB,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,MAAM,IAAII,KAAK,CAACG,EAAE,EAAE,EAAEH,KAAK,EAAET,WAAW,CAAC;EAChF;EAEAe,YAAYA,CAACH,EAAU;IACrB,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAIO,EAAE,EAAE,CAAC;EACvD;EAAC,QAAAK,CAAA,G;qBAxBUf,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbpB,aAAa;IAAAqB,OAAA,EAAbrB,aAAa,CAAAsB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}